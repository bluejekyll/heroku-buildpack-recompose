#!/usr/bin/env bash

# don't fail fast
#set -eu

if [ -f .heroku/bin/web ]; then
  eval "./.heroku/bin/web &"
  pid=$!
  trap "kill -9 $pid; exit" SIGKILL
else
  echo "No .heorku/bin/web file found!"
fi

# create netrc
cat >> $HOME/.netrc <<EOF
machine api.heroku.com
  login $HEROKU_API_USER
  password $HEROKU_API_KEY
EOF

echo "" >> Appfile

echo "Reading Appfile..."
while read app_release; do
  if [ -n "$app_release" ]; then
    echo "--> Processing $app_release"

    app_release_array=($app_release)
    app=${app_release_array[0]}
    release=${app_release_array[1]}

    slug_id=$(curl --retry 3 -s -n https://api.heroku.com/apps/$app/releases/$release \
      -H "Accept: application/vnd.heroku+json; version=3" | \
      python -c 'import json,sys;obj=json.load(sys.stdin);print obj["slug"]["id"]')

    if [ -n "$slug_id" ]; then
      slug_url=$(curl --retry 3 -s -n https://api.heroku.com/apps/$app/slugs/$slug_id \
        -H "Accept: application/vnd.heroku+json; version=3" | \
        python -c 'import json,sys;obj=json.load(sys.stdin);print obj["blob"]["url"]')

      if [ -n "$slug_url" ]; then
        echo "--> Downloading slug ${slug_id} for ${app}"
        [ -n "$RECOMPOSE_DIR" ] && mkdir -p $RECOMPOSE_DIR
        curl --retry 3 -s -L "${slug_url}" | \
            tar xzm --strip-components=1 -C . 2>&1 | \
            grep -v "Ignoring unknown extended header keyword"
      else
        echo "--> ERROR: could not find slug $slug_id for $app_release"
      fi
    else
      echo "--> ERROR: could not find release v${release} for ${app}"
    fi
  else
    echo "--> Done"
  fi
done </app/Appfile

rm $HOME/.netrc

while kill -0 $pid; do sleep 5; done
